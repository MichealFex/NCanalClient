// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace com.alibaba.otter.canal.protocol {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class CanalProtocol {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_com_alibaba_otter_canal_protocol_Packet__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alibaba.otter.canal.protocol.Packet, global::com.alibaba.otter.canal.protocol.Packet.Builder> internal__static_com_alibaba_otter_canal_protocol_Packet__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alibaba_otter_canal_protocol_HeartBeat__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alibaba.otter.canal.protocol.HeartBeat, global::com.alibaba.otter.canal.protocol.HeartBeat.Builder> internal__static_com_alibaba_otter_canal_protocol_HeartBeat__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alibaba_otter_canal_protocol_Handshake__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alibaba.otter.canal.protocol.Handshake, global::com.alibaba.otter.canal.protocol.Handshake.Builder> internal__static_com_alibaba_otter_canal_protocol_Handshake__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alibaba_otter_canal_protocol_ClientAuth__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alibaba.otter.canal.protocol.ClientAuth, global::com.alibaba.otter.canal.protocol.ClientAuth.Builder> internal__static_com_alibaba_otter_canal_protocol_ClientAuth__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alibaba_otter_canal_protocol_Ack__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alibaba.otter.canal.protocol.Ack, global::com.alibaba.otter.canal.protocol.Ack.Builder> internal__static_com_alibaba_otter_canal_protocol_Ack__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alibaba_otter_canal_protocol_ClientAck__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alibaba.otter.canal.protocol.ClientAck, global::com.alibaba.otter.canal.protocol.ClientAck.Builder> internal__static_com_alibaba_otter_canal_protocol_ClientAck__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alibaba_otter_canal_protocol_Sub__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alibaba.otter.canal.protocol.Sub, global::com.alibaba.otter.canal.protocol.Sub.Builder> internal__static_com_alibaba_otter_canal_protocol_Sub__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alibaba_otter_canal_protocol_Unsub__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alibaba.otter.canal.protocol.Unsub, global::com.alibaba.otter.canal.protocol.Unsub.Builder> internal__static_com_alibaba_otter_canal_protocol_Unsub__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alibaba_otter_canal_protocol_Get__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alibaba.otter.canal.protocol.Get, global::com.alibaba.otter.canal.protocol.Get.Builder> internal__static_com_alibaba_otter_canal_protocol_Get__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alibaba_otter_canal_protocol_Messages__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alibaba.otter.canal.protocol.Messages, global::com.alibaba.otter.canal.protocol.Messages.Builder> internal__static_com_alibaba_otter_canal_protocol_Messages__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alibaba_otter_canal_protocol_Dump__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alibaba.otter.canal.protocol.Dump, global::com.alibaba.otter.canal.protocol.Dump.Builder> internal__static_com_alibaba_otter_canal_protocol_Dump__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_alibaba_otter_canal_protocol_ClientRollback__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.alibaba.otter.canal.protocol.ClientRollback, global::com.alibaba.otter.canal.protocol.ClientRollback.Builder> internal__static_com_alibaba_otter_canal_protocol_ClientRollback__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static CanalProtocol() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNDYW5hbFByb3RvY29sLnByb3RvEiBjb20uYWxpYmFiYS5vdHRlci5jYW5h", 
            "bC5wcm90b2NvbCLKAQoGUGFja2V0EhgKDG1hZ2ljX251bWJlchgBIAEoBToC", 
            "MTcSEgoHdmVyc2lvbhgCIAEoBToBMRI6CgR0eXBlGAMgASgOMiwuY29tLmFs", 
            "aWJhYmEub3R0ZXIuY2FuYWwucHJvdG9jb2wuUGFja2V0VHlwZRJICgtjb21w", 
            "cmVzc2lvbhgEIAEoDjItLmNvbS5hbGliYWJhLm90dGVyLmNhbmFsLnByb3Rv", 
            "Y29sLkNvbXByZXNzaW9uOgROT05FEgwKBGJvZHkYBSABKAwiPAoJSGVhcnRC", 
            "ZWF0EhYKDnNlbmRfdGltZXN0YW1wGAEgASgDEhcKD3N0YXJ0X3RpbWVzdGFt", 
            "cBgCIAEoAyKPAQoJSGFuZHNoYWtlEiQKFmNvbW11bmljYXRpb25fZW5jb2Rp", 
            "bmcYASABKAk6BHV0ZjgSDQoFc2VlZHMYAiABKAwSTQoWc3VwcG9ydGVkX2Nv", 
            "bXByZXNzaW9ucxgDIAMoDjItLmNvbS5hbGliYWJhLm90dGVyLmNhbmFsLnBy", 
            "b3RvY29sLkNvbXByZXNzaW9uIrwBCgpDbGllbnRBdXRoEhAKCHVzZXJuYW1l", 
            "GAEgASgJEhAKCHBhc3N3b3JkGAIgASgMEhsKEG5ldF9yZWFkX3RpbWVvdXQY", 
            "AyABKAU6ATASHAoRbmV0X3dyaXRlX3RpbWVvdXQYBCABKAU6ATASEwoLZGVz", 
            "dGluYXRpb24YBSABKAkSEQoJY2xpZW50X2lkGAYgASgJEg4KBmZpbHRlchgH", 
            "IAEoCRIXCg9zdGFydF90aW1lc3RhbXAYCCABKAMiMwoDQWNrEhUKCmVycm9y", 
            "X2NvZGUYASABKAU6ATASFQoNZXJyb3JfbWVzc2FnZRgCIAEoCSJFCglDbGll", 
            "bnRBY2sSEwoLZGVzdGluYXRpb24YASABKAkSEQoJY2xpZW50X2lkGAIgASgJ", 
            "EhAKCGJhdGNoX2lkGAMgASgDIj0KA1N1YhITCgtkZXN0aW5hdGlvbhgBIAEo", 
            "CRIRCgljbGllbnRfaWQYAiABKAkSDgoGZmlsdGVyGAcgASgJIj8KBVVuc3Vi", 
            "EhMKC2Rlc3RpbmF0aW9uGAEgASgJEhEKCWNsaWVudF9pZBgCIAEoCRIOCgZm", 
            "aWx0ZXIYByABKAkigAEKA0dldBITCgtkZXN0aW5hdGlvbhgBIAEoCRIRCglj", 
            "bGllbnRfaWQYAiABKAkSEgoKZmV0Y2hfc2l6ZRgDIAEoBRITCgd0aW1lb3V0", 
            "GAQgASgDOgItMRIPCgR1bml0GAUgASgFOgEyEhcKCGF1dG9fYWNrGAYgASgI", 
            "OgVmYWxzZSIuCghNZXNzYWdlcxIQCghiYXRjaF9pZBgBIAEoAxIQCghtZXNz", 
            "YWdlcxgCIAMoDCI/CgREdW1wEg8KB2pvdXJuYWwYASABKAkSEAoIcG9zaXRp", 
            "b24YAiABKAMSFAoJdGltZXN0YW1wGAMgASgDOgEwIkoKDkNsaWVudFJvbGxi", 
            "YWNrEhMKC2Rlc3RpbmF0aW9uGAEgASgJEhEKCWNsaWVudF9pZBgCIAEoCRIQ", 
            "CghiYXRjaF9pZBgDIAEoAyo0CgtDb21wcmVzc2lvbhIICgROT05FEAESCAoE", 
            "WkxJQhACEggKBEdaSVAQAxIHCgNMWkYQBCrFAQoKUGFja2V0VHlwZRINCglI", 
            "QU5EU0hBS0UQARIYChRDTElFTlRBVVRIRU5USUNBVElPThACEgcKA0FDSxAD", 
            "EhAKDFNVQlNDUklQVElPThAEEhIKDlVOU1VCU0NSSVBUSU9OEAUSBwoDR0VU", 
            "EAYSDAoITUVTU0FHRVMQBxINCglDTElFTlRBQ0sQCBIMCghTSFVURE9XThAJ", 
            "EggKBERVTVAQChINCglIRUFSVEJFQVQQCxISCg5DTElFTlRST0xMQkFDSxAM", 
            "QjEKIGNvbS5hbGliYWJhLm90dGVyLmNhbmFsLnByb3RvY29sQgtDYW5hbFBh", 
          "Y2tldEgB"));
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_com_alibaba_otter_canal_protocol_Packet__Descriptor = Descriptor.MessageTypes[0];
        internal__static_com_alibaba_otter_canal_protocol_Packet__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alibaba.otter.canal.protocol.Packet, global::com.alibaba.otter.canal.protocol.Packet.Builder>(internal__static_com_alibaba_otter_canal_protocol_Packet__Descriptor,
                new string[] { "MagicNumber", "Version", "Type", "Compression", "Body", });
        internal__static_com_alibaba_otter_canal_protocol_HeartBeat__Descriptor = Descriptor.MessageTypes[1];
        internal__static_com_alibaba_otter_canal_protocol_HeartBeat__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alibaba.otter.canal.protocol.HeartBeat, global::com.alibaba.otter.canal.protocol.HeartBeat.Builder>(internal__static_com_alibaba_otter_canal_protocol_HeartBeat__Descriptor,
                new string[] { "SendTimestamp", "StartTimestamp", });
        internal__static_com_alibaba_otter_canal_protocol_Handshake__Descriptor = Descriptor.MessageTypes[2];
        internal__static_com_alibaba_otter_canal_protocol_Handshake__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alibaba.otter.canal.protocol.Handshake, global::com.alibaba.otter.canal.protocol.Handshake.Builder>(internal__static_com_alibaba_otter_canal_protocol_Handshake__Descriptor,
                new string[] { "CommunicationEncoding", "Seeds", "SupportedCompressions", });
        internal__static_com_alibaba_otter_canal_protocol_ClientAuth__Descriptor = Descriptor.MessageTypes[3];
        internal__static_com_alibaba_otter_canal_protocol_ClientAuth__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alibaba.otter.canal.protocol.ClientAuth, global::com.alibaba.otter.canal.protocol.ClientAuth.Builder>(internal__static_com_alibaba_otter_canal_protocol_ClientAuth__Descriptor,
                new string[] { "Username", "Password", "NetReadTimeout", "NetWriteTimeout", "Destination", "ClientId", "Filter", "StartTimestamp", });
        internal__static_com_alibaba_otter_canal_protocol_Ack__Descriptor = Descriptor.MessageTypes[4];
        internal__static_com_alibaba_otter_canal_protocol_Ack__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alibaba.otter.canal.protocol.Ack, global::com.alibaba.otter.canal.protocol.Ack.Builder>(internal__static_com_alibaba_otter_canal_protocol_Ack__Descriptor,
                new string[] { "ErrorCode", "ErrorMessage", });
        internal__static_com_alibaba_otter_canal_protocol_ClientAck__Descriptor = Descriptor.MessageTypes[5];
        internal__static_com_alibaba_otter_canal_protocol_ClientAck__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alibaba.otter.canal.protocol.ClientAck, global::com.alibaba.otter.canal.protocol.ClientAck.Builder>(internal__static_com_alibaba_otter_canal_protocol_ClientAck__Descriptor,
                new string[] { "Destination", "ClientId", "BatchId", });
        internal__static_com_alibaba_otter_canal_protocol_Sub__Descriptor = Descriptor.MessageTypes[6];
        internal__static_com_alibaba_otter_canal_protocol_Sub__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alibaba.otter.canal.protocol.Sub, global::com.alibaba.otter.canal.protocol.Sub.Builder>(internal__static_com_alibaba_otter_canal_protocol_Sub__Descriptor,
                new string[] { "Destination", "ClientId", "Filter", });
        internal__static_com_alibaba_otter_canal_protocol_Unsub__Descriptor = Descriptor.MessageTypes[7];
        internal__static_com_alibaba_otter_canal_protocol_Unsub__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alibaba.otter.canal.protocol.Unsub, global::com.alibaba.otter.canal.protocol.Unsub.Builder>(internal__static_com_alibaba_otter_canal_protocol_Unsub__Descriptor,
                new string[] { "Destination", "ClientId", "Filter", });
        internal__static_com_alibaba_otter_canal_protocol_Get__Descriptor = Descriptor.MessageTypes[8];
        internal__static_com_alibaba_otter_canal_protocol_Get__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alibaba.otter.canal.protocol.Get, global::com.alibaba.otter.canal.protocol.Get.Builder>(internal__static_com_alibaba_otter_canal_protocol_Get__Descriptor,
                new string[] { "Destination", "ClientId", "FetchSize", "Timeout", "Unit", "AutoAck", });
        internal__static_com_alibaba_otter_canal_protocol_Messages__Descriptor = Descriptor.MessageTypes[9];
        internal__static_com_alibaba_otter_canal_protocol_Messages__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alibaba.otter.canal.protocol.Messages, global::com.alibaba.otter.canal.protocol.Messages.Builder>(internal__static_com_alibaba_otter_canal_protocol_Messages__Descriptor,
                new string[] { "BatchId", "Messages_", });
        internal__static_com_alibaba_otter_canal_protocol_Dump__Descriptor = Descriptor.MessageTypes[10];
        internal__static_com_alibaba_otter_canal_protocol_Dump__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alibaba.otter.canal.protocol.Dump, global::com.alibaba.otter.canal.protocol.Dump.Builder>(internal__static_com_alibaba_otter_canal_protocol_Dump__Descriptor,
                new string[] { "Journal", "Position", "Timestamp", });
        internal__static_com_alibaba_otter_canal_protocol_ClientRollback__Descriptor = Descriptor.MessageTypes[11];
        internal__static_com_alibaba_otter_canal_protocol_ClientRollback__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.alibaba.otter.canal.protocol.ClientRollback, global::com.alibaba.otter.canal.protocol.ClientRollback.Builder>(internal__static_com_alibaba_otter_canal_protocol_ClientRollback__Descriptor,
                new string[] { "Destination", "ClientId", "BatchId", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Enums
  public enum Compression {
    NONE = 1,
    ZLIB = 2,
    GZIP = 3,
    LZF = 4,
  }
  
  public enum PacketType {
    HANDSHAKE = 1,
    CLIENTAUTHENTICATION = 2,
    ACK = 3,
    SUBSCRIPTION = 4,
    UNSUBSCRIPTION = 5,
    GET = 6,
    MESSAGES = 7,
    CLIENTACK = 8,
    SHUTDOWN = 9,
    DUMP = 10,
    HEARTBEAT = 11,
    CLIENTROLLBACK = 12,
  }
  
  #endregion
  
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Packet : pb::GeneratedMessage<Packet, Packet.Builder> {
    private Packet() { }
    private static readonly Packet defaultInstance = new Packet().MakeReadOnly();
    private static readonly string[] _packetFieldNames = new string[] { "body", "compression", "magic_number", "type", "version" };
    private static readonly uint[] _packetFieldTags = new uint[] { 42, 32, 8, 24, 16 };
    public static Packet DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Packet DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Packet ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alibaba.otter.canal.protocol.CanalProtocol.internal__static_com_alibaba_otter_canal_protocol_Packet__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Packet, Packet.Builder> InternalFieldAccessors {
      get { return global::com.alibaba.otter.canal.protocol.CanalProtocol.internal__static_com_alibaba_otter_canal_protocol_Packet__FieldAccessorTable; }
    }
    
    public const int MagicNumberFieldNumber = 1;
    private bool hasMagicNumber;
    private int magicNumber_ = 17;
    public bool HasMagicNumber {
      get { return hasMagicNumber; }
    }
    public int MagicNumber {
      get { return magicNumber_; }
    }
    
    public const int VersionFieldNumber = 2;
    private bool hasVersion;
    private int version_ = 1;
    public bool HasVersion {
      get { return hasVersion; }
    }
    public int Version {
      get { return version_; }
    }
    
    public const int TypeFieldNumber = 3;
    private bool hasType;
    private global::com.alibaba.otter.canal.protocol.PacketType type_ = global::com.alibaba.otter.canal.protocol.PacketType.HANDSHAKE;
    public bool HasType {
      get { return hasType; }
    }
    public global::com.alibaba.otter.canal.protocol.PacketType Type {
      get { return type_; }
    }
    
    public const int CompressionFieldNumber = 4;
    private bool hasCompression;
    private global::com.alibaba.otter.canal.protocol.Compression compression_ = global::com.alibaba.otter.canal.protocol.Compression.NONE;
    public bool HasCompression {
      get { return hasCompression; }
    }
    public global::com.alibaba.otter.canal.protocol.Compression Compression {
      get { return compression_; }
    }
    
    public const int BodyFieldNumber = 5;
    private bool hasBody;
    private pb::ByteString body_ = pb::ByteString.Empty;
    public bool HasBody {
      get { return hasBody; }
    }
    public pb::ByteString Body {
      get { return body_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _packetFieldNames;
      if (hasMagicNumber) {
        output.WriteInt32(1, field_names[2], MagicNumber);
      }
      if (hasVersion) {
        output.WriteInt32(2, field_names[4], Version);
      }
      if (hasType) {
        output.WriteEnum(3, field_names[3], (int) Type, Type);
      }
      if (hasCompression) {
        output.WriteEnum(4, field_names[1], (int) Compression, Compression);
      }
      if (hasBody) {
        output.WriteBytes(5, field_names[0], Body);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasMagicNumber) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, MagicNumber);
      }
      if (hasVersion) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, Version);
      }
      if (hasType) {
        size += pb::CodedOutputStream.ComputeEnumSize(3, (int) Type);
      }
      if (hasCompression) {
        size += pb::CodedOutputStream.ComputeEnumSize(4, (int) Compression);
      }
      if (hasBody) {
        size += pb::CodedOutputStream.ComputeBytesSize(5, Body);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Packet ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Packet ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Packet ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Packet ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Packet ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Packet ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Packet ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Packet ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Packet ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Packet ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Packet MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Packet prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Packet, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Packet cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Packet result;
      
      private Packet PrepareBuilder() {
        if (resultIsReadOnly) {
          Packet original = result;
          result = new Packet();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Packet MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alibaba.otter.canal.protocol.Packet.Descriptor; }
      }
      
      public override Packet DefaultInstanceForType {
        get { return global::com.alibaba.otter.canal.protocol.Packet.DefaultInstance; }
      }
      
      public override Packet BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Packet) {
          return MergeFrom((Packet) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Packet other) {
        if (other == global::com.alibaba.otter.canal.protocol.Packet.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMagicNumber) {
          MagicNumber = other.MagicNumber;
        }
        if (other.HasVersion) {
          Version = other.Version;
        }
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasCompression) {
          Compression = other.Compression;
        }
        if (other.HasBody) {
          Body = other.Body;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_packetFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _packetFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasMagicNumber = input.ReadInt32(ref result.magicNumber_);
              break;
            }
            case 16: {
              result.hasVersion = input.ReadInt32(ref result.version_);
              break;
            }
            case 24: {
              object unknown;
              if(input.ReadEnum(ref result.type_, out unknown)) {
                result.hasType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(3, (ulong)(int)unknown);
              }
              break;
            }
            case 32: {
              object unknown;
              if(input.ReadEnum(ref result.compression_, out unknown)) {
                result.hasCompression = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(4, (ulong)(int)unknown);
              }
              break;
            }
            case 42: {
              result.hasBody = input.ReadBytes(ref result.body_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMagicNumber {
        get { return result.hasMagicNumber; }
      }
      public int MagicNumber {
        get { return result.MagicNumber; }
        set { SetMagicNumber(value); }
      }
      public Builder SetMagicNumber(int value) {
        PrepareBuilder();
        result.hasMagicNumber = true;
        result.magicNumber_ = value;
        return this;
      }
      public Builder ClearMagicNumber() {
        PrepareBuilder();
        result.hasMagicNumber = false;
        result.magicNumber_ = 17;
        return this;
      }
      
      public bool HasVersion {
        get { return result.hasVersion; }
      }
      public int Version {
        get { return result.Version; }
        set { SetVersion(value); }
      }
      public Builder SetVersion(int value) {
        PrepareBuilder();
        result.hasVersion = true;
        result.version_ = value;
        return this;
      }
      public Builder ClearVersion() {
        PrepareBuilder();
        result.hasVersion = false;
        result.version_ = 1;
        return this;
      }
      
      public bool HasType {
       get { return result.hasType; }
      }
      public global::com.alibaba.otter.canal.protocol.PacketType Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(global::com.alibaba.otter.canal.protocol.PacketType value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = global::com.alibaba.otter.canal.protocol.PacketType.HANDSHAKE;
        return this;
      }
      
      public bool HasCompression {
       get { return result.hasCompression; }
      }
      public global::com.alibaba.otter.canal.protocol.Compression Compression {
        get { return result.Compression; }
        set { SetCompression(value); }
      }
      public Builder SetCompression(global::com.alibaba.otter.canal.protocol.Compression value) {
        PrepareBuilder();
        result.hasCompression = true;
        result.compression_ = value;
        return this;
      }
      public Builder ClearCompression() {
        PrepareBuilder();
        result.hasCompression = false;
        result.compression_ = global::com.alibaba.otter.canal.protocol.Compression.NONE;
        return this;
      }
      
      public bool HasBody {
        get { return result.hasBody; }
      }
      public pb::ByteString Body {
        get { return result.Body; }
        set { SetBody(value); }
      }
      public Builder SetBody(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBody = true;
        result.body_ = value;
        return this;
      }
      public Builder ClearBody() {
        PrepareBuilder();
        result.hasBody = false;
        result.body_ = pb::ByteString.Empty;
        return this;
      }
    }
    static Packet() {
      object.ReferenceEquals(global::com.alibaba.otter.canal.protocol.CanalProtocol.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class HeartBeat : pb::GeneratedMessage<HeartBeat, HeartBeat.Builder> {
    private HeartBeat() { }
    private static readonly HeartBeat defaultInstance = new HeartBeat().MakeReadOnly();
    private static readonly string[] _heartBeatFieldNames = new string[] { "send_timestamp", "start_timestamp" };
    private static readonly uint[] _heartBeatFieldTags = new uint[] { 8, 16 };
    public static HeartBeat DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override HeartBeat DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override HeartBeat ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alibaba.otter.canal.protocol.CanalProtocol.internal__static_com_alibaba_otter_canal_protocol_HeartBeat__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<HeartBeat, HeartBeat.Builder> InternalFieldAccessors {
      get { return global::com.alibaba.otter.canal.protocol.CanalProtocol.internal__static_com_alibaba_otter_canal_protocol_HeartBeat__FieldAccessorTable; }
    }
    
    public const int SendTimestampFieldNumber = 1;
    private bool hasSendTimestamp;
    private long sendTimestamp_;
    public bool HasSendTimestamp {
      get { return hasSendTimestamp; }
    }
    public long SendTimestamp {
      get { return sendTimestamp_; }
    }
    
    public const int StartTimestampFieldNumber = 2;
    private bool hasStartTimestamp;
    private long startTimestamp_;
    public bool HasStartTimestamp {
      get { return hasStartTimestamp; }
    }
    public long StartTimestamp {
      get { return startTimestamp_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _heartBeatFieldNames;
      if (hasSendTimestamp) {
        output.WriteInt64(1, field_names[0], SendTimestamp);
      }
      if (hasStartTimestamp) {
        output.WriteInt64(2, field_names[1], StartTimestamp);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSendTimestamp) {
        size += pb::CodedOutputStream.ComputeInt64Size(1, SendTimestamp);
      }
      if (hasStartTimestamp) {
        size += pb::CodedOutputStream.ComputeInt64Size(2, StartTimestamp);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static HeartBeat ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static HeartBeat ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static HeartBeat ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static HeartBeat ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static HeartBeat ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static HeartBeat ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static HeartBeat ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static HeartBeat ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static HeartBeat ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static HeartBeat ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private HeartBeat MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(HeartBeat prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<HeartBeat, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(HeartBeat cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private HeartBeat result;
      
      private HeartBeat PrepareBuilder() {
        if (resultIsReadOnly) {
          HeartBeat original = result;
          result = new HeartBeat();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override HeartBeat MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alibaba.otter.canal.protocol.HeartBeat.Descriptor; }
      }
      
      public override HeartBeat DefaultInstanceForType {
        get { return global::com.alibaba.otter.canal.protocol.HeartBeat.DefaultInstance; }
      }
      
      public override HeartBeat BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is HeartBeat) {
          return MergeFrom((HeartBeat) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(HeartBeat other) {
        if (other == global::com.alibaba.otter.canal.protocol.HeartBeat.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSendTimestamp) {
          SendTimestamp = other.SendTimestamp;
        }
        if (other.HasStartTimestamp) {
          StartTimestamp = other.StartTimestamp;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_heartBeatFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _heartBeatFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasSendTimestamp = input.ReadInt64(ref result.sendTimestamp_);
              break;
            }
            case 16: {
              result.hasStartTimestamp = input.ReadInt64(ref result.startTimestamp_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSendTimestamp {
        get { return result.hasSendTimestamp; }
      }
      public long SendTimestamp {
        get { return result.SendTimestamp; }
        set { SetSendTimestamp(value); }
      }
      public Builder SetSendTimestamp(long value) {
        PrepareBuilder();
        result.hasSendTimestamp = true;
        result.sendTimestamp_ = value;
        return this;
      }
      public Builder ClearSendTimestamp() {
        PrepareBuilder();
        result.hasSendTimestamp = false;
        result.sendTimestamp_ = 0L;
        return this;
      }
      
      public bool HasStartTimestamp {
        get { return result.hasStartTimestamp; }
      }
      public long StartTimestamp {
        get { return result.StartTimestamp; }
        set { SetStartTimestamp(value); }
      }
      public Builder SetStartTimestamp(long value) {
        PrepareBuilder();
        result.hasStartTimestamp = true;
        result.startTimestamp_ = value;
        return this;
      }
      public Builder ClearStartTimestamp() {
        PrepareBuilder();
        result.hasStartTimestamp = false;
        result.startTimestamp_ = 0L;
        return this;
      }
    }
    static HeartBeat() {
      object.ReferenceEquals(global::com.alibaba.otter.canal.protocol.CanalProtocol.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Handshake : pb::GeneratedMessage<Handshake, Handshake.Builder> {
    private Handshake() { }
    private static readonly Handshake defaultInstance = new Handshake().MakeReadOnly();
    private static readonly string[] _handshakeFieldNames = new string[] { "communication_encoding", "seeds", "supported_compressions" };
    private static readonly uint[] _handshakeFieldTags = new uint[] { 10, 18, 24 };
    public static Handshake DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Handshake DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Handshake ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alibaba.otter.canal.protocol.CanalProtocol.internal__static_com_alibaba_otter_canal_protocol_Handshake__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Handshake, Handshake.Builder> InternalFieldAccessors {
      get { return global::com.alibaba.otter.canal.protocol.CanalProtocol.internal__static_com_alibaba_otter_canal_protocol_Handshake__FieldAccessorTable; }
    }
    
    public const int CommunicationEncodingFieldNumber = 1;
    private bool hasCommunicationEncoding;
    private string communicationEncoding_ = "utf8";
    public bool HasCommunicationEncoding {
      get { return hasCommunicationEncoding; }
    }
    public string CommunicationEncoding {
      get { return communicationEncoding_; }
    }
    
    public const int SeedsFieldNumber = 2;
    private bool hasSeeds;
    private pb::ByteString seeds_ = pb::ByteString.Empty;
    public bool HasSeeds {
      get { return hasSeeds; }
    }
    public pb::ByteString Seeds {
      get { return seeds_; }
    }
    
    public const int SupportedCompressionsFieldNumber = 3;
    private pbc::PopsicleList<global::com.alibaba.otter.canal.protocol.Compression> supportedCompressions_ = new pbc::PopsicleList<global::com.alibaba.otter.canal.protocol.Compression>();
    public scg::IList<global::com.alibaba.otter.canal.protocol.Compression> SupportedCompressionsList {
      get { return pbc::Lists.AsReadOnly(supportedCompressions_); }
    }
    public int SupportedCompressionsCount {
      get { return supportedCompressions_.Count; }
    }
    public global::com.alibaba.otter.canal.protocol.Compression GetSupportedCompressions(int index) {
      return supportedCompressions_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _handshakeFieldNames;
      if (hasCommunicationEncoding) {
        output.WriteString(1, field_names[0], CommunicationEncoding);
      }
      if (hasSeeds) {
        output.WriteBytes(2, field_names[1], Seeds);
      }
      if (supportedCompressions_.Count > 0) {
        output.WriteEnumArray(3, field_names[2], supportedCompressions_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCommunicationEncoding) {
        size += pb::CodedOutputStream.ComputeStringSize(1, CommunicationEncoding);
      }
      if (hasSeeds) {
        size += pb::CodedOutputStream.ComputeBytesSize(2, Seeds);
      }
      {
        int dataSize = 0;
        if (supportedCompressions_.Count > 0) {
          foreach (global::com.alibaba.otter.canal.protocol.Compression element in supportedCompressions_) {
            dataSize += pb::CodedOutputStream.ComputeEnumSizeNoTag((int) element);
          }
          size += dataSize;
          size += 1 * supportedCompressions_.Count;
        }
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Handshake ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Handshake ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Handshake ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Handshake ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Handshake ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Handshake ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Handshake ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Handshake ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Handshake ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Handshake ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Handshake MakeReadOnly() {
      supportedCompressions_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Handshake prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Handshake, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Handshake cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Handshake result;
      
      private Handshake PrepareBuilder() {
        if (resultIsReadOnly) {
          Handshake original = result;
          result = new Handshake();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Handshake MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alibaba.otter.canal.protocol.Handshake.Descriptor; }
      }
      
      public override Handshake DefaultInstanceForType {
        get { return global::com.alibaba.otter.canal.protocol.Handshake.DefaultInstance; }
      }
      
      public override Handshake BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Handshake) {
          return MergeFrom((Handshake) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Handshake other) {
        if (other == global::com.alibaba.otter.canal.protocol.Handshake.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCommunicationEncoding) {
          CommunicationEncoding = other.CommunicationEncoding;
        }
        if (other.HasSeeds) {
          Seeds = other.Seeds;
        }
        if (other.supportedCompressions_.Count != 0) {
          result.supportedCompressions_.Add(other.supportedCompressions_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_handshakeFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _handshakeFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasCommunicationEncoding = input.ReadString(ref result.communicationEncoding_);
              break;
            }
            case 18: {
              result.hasSeeds = input.ReadBytes(ref result.seeds_);
              break;
            }
            case 26:
            case 24: {
              scg::ICollection<object> unknownItems;
              input.ReadEnumArray<global::com.alibaba.otter.canal.protocol.Compression>(tag, field_name, result.supportedCompressions_, out unknownItems);
              if (unknownItems != null) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                foreach (object rawValue in unknownItems)
                  if (rawValue is int)
                    unknownFields.MergeVarintField(3, (ulong)(int)rawValue);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCommunicationEncoding {
        get { return result.hasCommunicationEncoding; }
      }
      public string CommunicationEncoding {
        get { return result.CommunicationEncoding; }
        set { SetCommunicationEncoding(value); }
      }
      public Builder SetCommunicationEncoding(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCommunicationEncoding = true;
        result.communicationEncoding_ = value;
        return this;
      }
      public Builder ClearCommunicationEncoding() {
        PrepareBuilder();
        result.hasCommunicationEncoding = false;
        result.communicationEncoding_ = "utf8";
        return this;
      }
      
      public bool HasSeeds {
        get { return result.hasSeeds; }
      }
      public pb::ByteString Seeds {
        get { return result.Seeds; }
        set { SetSeeds(value); }
      }
      public Builder SetSeeds(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSeeds = true;
        result.seeds_ = value;
        return this;
      }
      public Builder ClearSeeds() {
        PrepareBuilder();
        result.hasSeeds = false;
        result.seeds_ = pb::ByteString.Empty;
        return this;
      }
      
      public pbc::IPopsicleList<global::com.alibaba.otter.canal.protocol.Compression> SupportedCompressionsList {
        get { return PrepareBuilder().supportedCompressions_; }
      }
      public int SupportedCompressionsCount {
        get { return result.SupportedCompressionsCount; }
      }
      public global::com.alibaba.otter.canal.protocol.Compression GetSupportedCompressions(int index) {
        return result.GetSupportedCompressions(index);
      }
      public Builder SetSupportedCompressions(int index, global::com.alibaba.otter.canal.protocol.Compression value) {
        PrepareBuilder();
        result.supportedCompressions_[index] = value;
        return this;
      }
      public Builder AddSupportedCompressions(global::com.alibaba.otter.canal.protocol.Compression value) {
        PrepareBuilder();
        result.supportedCompressions_.Add(value);
        return this;
      }
      public Builder AddRangeSupportedCompressions(scg::IEnumerable<global::com.alibaba.otter.canal.protocol.Compression> values) {
        PrepareBuilder();
        result.supportedCompressions_.Add(values);
        return this;
      }
      public Builder ClearSupportedCompressions() {
        PrepareBuilder();
        result.supportedCompressions_.Clear();
        return this;
      }
    }
    static Handshake() {
      object.ReferenceEquals(global::com.alibaba.otter.canal.protocol.CanalProtocol.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ClientAuth : pb::GeneratedMessage<ClientAuth, ClientAuth.Builder> {
    private ClientAuth() { }
    private static readonly ClientAuth defaultInstance = new ClientAuth().MakeReadOnly();
    private static readonly string[] _clientAuthFieldNames = new string[] { "client_id", "destination", "filter", "net_read_timeout", "net_write_timeout", "password", "start_timestamp", "username" };
    private static readonly uint[] _clientAuthFieldTags = new uint[] { 50, 42, 58, 24, 32, 18, 64, 10 };
    public static ClientAuth DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ClientAuth DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ClientAuth ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alibaba.otter.canal.protocol.CanalProtocol.internal__static_com_alibaba_otter_canal_protocol_ClientAuth__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ClientAuth, ClientAuth.Builder> InternalFieldAccessors {
      get { return global::com.alibaba.otter.canal.protocol.CanalProtocol.internal__static_com_alibaba_otter_canal_protocol_ClientAuth__FieldAccessorTable; }
    }
    
    public const int UsernameFieldNumber = 1;
    private bool hasUsername;
    private string username_ = "";
    public bool HasUsername {
      get { return hasUsername; }
    }
    public string Username {
      get { return username_; }
    }
    
    public const int PasswordFieldNumber = 2;
    private bool hasPassword;
    private pb::ByteString password_ = pb::ByteString.Empty;
    public bool HasPassword {
      get { return hasPassword; }
    }
    public pb::ByteString Password {
      get { return password_; }
    }
    
    public const int NetReadTimeoutFieldNumber = 3;
    private bool hasNetReadTimeout;
    private int netReadTimeout_;
    public bool HasNetReadTimeout {
      get { return hasNetReadTimeout; }
    }
    public int NetReadTimeout {
      get { return netReadTimeout_; }
    }
    
    public const int NetWriteTimeoutFieldNumber = 4;
    private bool hasNetWriteTimeout;
    private int netWriteTimeout_;
    public bool HasNetWriteTimeout {
      get { return hasNetWriteTimeout; }
    }
    public int NetWriteTimeout {
      get { return netWriteTimeout_; }
    }
    
    public const int DestinationFieldNumber = 5;
    private bool hasDestination;
    private string destination_ = "";
    public bool HasDestination {
      get { return hasDestination; }
    }
    public string Destination {
      get { return destination_; }
    }
    
    public const int ClientIdFieldNumber = 6;
    private bool hasClientId;
    private string clientId_ = "";
    public bool HasClientId {
      get { return hasClientId; }
    }
    public string ClientId {
      get { return clientId_; }
    }
    
    public const int FilterFieldNumber = 7;
    private bool hasFilter;
    private string filter_ = "";
    public bool HasFilter {
      get { return hasFilter; }
    }
    public string Filter {
      get { return filter_; }
    }
    
    public const int StartTimestampFieldNumber = 8;
    private bool hasStartTimestamp;
    private long startTimestamp_;
    public bool HasStartTimestamp {
      get { return hasStartTimestamp; }
    }
    public long StartTimestamp {
      get { return startTimestamp_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _clientAuthFieldNames;
      if (hasUsername) {
        output.WriteString(1, field_names[7], Username);
      }
      if (hasPassword) {
        output.WriteBytes(2, field_names[5], Password);
      }
      if (hasNetReadTimeout) {
        output.WriteInt32(3, field_names[3], NetReadTimeout);
      }
      if (hasNetWriteTimeout) {
        output.WriteInt32(4, field_names[4], NetWriteTimeout);
      }
      if (hasDestination) {
        output.WriteString(5, field_names[1], Destination);
      }
      if (hasClientId) {
        output.WriteString(6, field_names[0], ClientId);
      }
      if (hasFilter) {
        output.WriteString(7, field_names[2], Filter);
      }
      if (hasStartTimestamp) {
        output.WriteInt64(8, field_names[6], StartTimestamp);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUsername) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Username);
      }
      if (hasPassword) {
        size += pb::CodedOutputStream.ComputeBytesSize(2, Password);
      }
      if (hasNetReadTimeout) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, NetReadTimeout);
      }
      if (hasNetWriteTimeout) {
        size += pb::CodedOutputStream.ComputeInt32Size(4, NetWriteTimeout);
      }
      if (hasDestination) {
        size += pb::CodedOutputStream.ComputeStringSize(5, Destination);
      }
      if (hasClientId) {
        size += pb::CodedOutputStream.ComputeStringSize(6, ClientId);
      }
      if (hasFilter) {
        size += pb::CodedOutputStream.ComputeStringSize(7, Filter);
      }
      if (hasStartTimestamp) {
        size += pb::CodedOutputStream.ComputeInt64Size(8, StartTimestamp);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ClientAuth ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClientAuth ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClientAuth ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClientAuth ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClientAuth ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClientAuth ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ClientAuth ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ClientAuth ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ClientAuth ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClientAuth ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ClientAuth MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ClientAuth prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ClientAuth, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ClientAuth cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ClientAuth result;
      
      private ClientAuth PrepareBuilder() {
        if (resultIsReadOnly) {
          ClientAuth original = result;
          result = new ClientAuth();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ClientAuth MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alibaba.otter.canal.protocol.ClientAuth.Descriptor; }
      }
      
      public override ClientAuth DefaultInstanceForType {
        get { return global::com.alibaba.otter.canal.protocol.ClientAuth.DefaultInstance; }
      }
      
      public override ClientAuth BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ClientAuth) {
          return MergeFrom((ClientAuth) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ClientAuth other) {
        if (other == global::com.alibaba.otter.canal.protocol.ClientAuth.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUsername) {
          Username = other.Username;
        }
        if (other.HasPassword) {
          Password = other.Password;
        }
        if (other.HasNetReadTimeout) {
          NetReadTimeout = other.NetReadTimeout;
        }
        if (other.HasNetWriteTimeout) {
          NetWriteTimeout = other.NetWriteTimeout;
        }
        if (other.HasDestination) {
          Destination = other.Destination;
        }
        if (other.HasClientId) {
          ClientId = other.ClientId;
        }
        if (other.HasFilter) {
          Filter = other.Filter;
        }
        if (other.HasStartTimestamp) {
          StartTimestamp = other.StartTimestamp;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_clientAuthFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _clientAuthFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasUsername = input.ReadString(ref result.username_);
              break;
            }
            case 18: {
              result.hasPassword = input.ReadBytes(ref result.password_);
              break;
            }
            case 24: {
              result.hasNetReadTimeout = input.ReadInt32(ref result.netReadTimeout_);
              break;
            }
            case 32: {
              result.hasNetWriteTimeout = input.ReadInt32(ref result.netWriteTimeout_);
              break;
            }
            case 42: {
              result.hasDestination = input.ReadString(ref result.destination_);
              break;
            }
            case 50: {
              result.hasClientId = input.ReadString(ref result.clientId_);
              break;
            }
            case 58: {
              result.hasFilter = input.ReadString(ref result.filter_);
              break;
            }
            case 64: {
              result.hasStartTimestamp = input.ReadInt64(ref result.startTimestamp_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUsername {
        get { return result.hasUsername; }
      }
      public string Username {
        get { return result.Username; }
        set { SetUsername(value); }
      }
      public Builder SetUsername(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUsername = true;
        result.username_ = value;
        return this;
      }
      public Builder ClearUsername() {
        PrepareBuilder();
        result.hasUsername = false;
        result.username_ = "";
        return this;
      }
      
      public bool HasPassword {
        get { return result.hasPassword; }
      }
      public pb::ByteString Password {
        get { return result.Password; }
        set { SetPassword(value); }
      }
      public Builder SetPassword(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPassword = true;
        result.password_ = value;
        return this;
      }
      public Builder ClearPassword() {
        PrepareBuilder();
        result.hasPassword = false;
        result.password_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasNetReadTimeout {
        get { return result.hasNetReadTimeout; }
      }
      public int NetReadTimeout {
        get { return result.NetReadTimeout; }
        set { SetNetReadTimeout(value); }
      }
      public Builder SetNetReadTimeout(int value) {
        PrepareBuilder();
        result.hasNetReadTimeout = true;
        result.netReadTimeout_ = value;
        return this;
      }
      public Builder ClearNetReadTimeout() {
        PrepareBuilder();
        result.hasNetReadTimeout = false;
        result.netReadTimeout_ = 0;
        return this;
      }
      
      public bool HasNetWriteTimeout {
        get { return result.hasNetWriteTimeout; }
      }
      public int NetWriteTimeout {
        get { return result.NetWriteTimeout; }
        set { SetNetWriteTimeout(value); }
      }
      public Builder SetNetWriteTimeout(int value) {
        PrepareBuilder();
        result.hasNetWriteTimeout = true;
        result.netWriteTimeout_ = value;
        return this;
      }
      public Builder ClearNetWriteTimeout() {
        PrepareBuilder();
        result.hasNetWriteTimeout = false;
        result.netWriteTimeout_ = 0;
        return this;
      }
      
      public bool HasDestination {
        get { return result.hasDestination; }
      }
      public string Destination {
        get { return result.Destination; }
        set { SetDestination(value); }
      }
      public Builder SetDestination(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDestination = true;
        result.destination_ = value;
        return this;
      }
      public Builder ClearDestination() {
        PrepareBuilder();
        result.hasDestination = false;
        result.destination_ = "";
        return this;
      }
      
      public bool HasClientId {
        get { return result.hasClientId; }
      }
      public string ClientId {
        get { return result.ClientId; }
        set { SetClientId(value); }
      }
      public Builder SetClientId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasClientId = true;
        result.clientId_ = value;
        return this;
      }
      public Builder ClearClientId() {
        PrepareBuilder();
        result.hasClientId = false;
        result.clientId_ = "";
        return this;
      }
      
      public bool HasFilter {
        get { return result.hasFilter; }
      }
      public string Filter {
        get { return result.Filter; }
        set { SetFilter(value); }
      }
      public Builder SetFilter(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFilter = true;
        result.filter_ = value;
        return this;
      }
      public Builder ClearFilter() {
        PrepareBuilder();
        result.hasFilter = false;
        result.filter_ = "";
        return this;
      }
      
      public bool HasStartTimestamp {
        get { return result.hasStartTimestamp; }
      }
      public long StartTimestamp {
        get { return result.StartTimestamp; }
        set { SetStartTimestamp(value); }
      }
      public Builder SetStartTimestamp(long value) {
        PrepareBuilder();
        result.hasStartTimestamp = true;
        result.startTimestamp_ = value;
        return this;
      }
      public Builder ClearStartTimestamp() {
        PrepareBuilder();
        result.hasStartTimestamp = false;
        result.startTimestamp_ = 0L;
        return this;
      }
    }
    static ClientAuth() {
      object.ReferenceEquals(global::com.alibaba.otter.canal.protocol.CanalProtocol.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Ack : pb::GeneratedMessage<Ack, Ack.Builder> {
    private Ack() { }
    private static readonly Ack defaultInstance = new Ack().MakeReadOnly();
    private static readonly string[] _ackFieldNames = new string[] { "error_code", "error_message" };
    private static readonly uint[] _ackFieldTags = new uint[] { 8, 18 };
    public static Ack DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Ack DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Ack ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alibaba.otter.canal.protocol.CanalProtocol.internal__static_com_alibaba_otter_canal_protocol_Ack__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Ack, Ack.Builder> InternalFieldAccessors {
      get { return global::com.alibaba.otter.canal.protocol.CanalProtocol.internal__static_com_alibaba_otter_canal_protocol_Ack__FieldAccessorTable; }
    }
    
    public const int ErrorCodeFieldNumber = 1;
    private bool hasErrorCode;
    private int errorCode_;
    public bool HasErrorCode {
      get { return hasErrorCode; }
    }
    public int ErrorCode {
      get { return errorCode_; }
    }
    
    public const int ErrorMessageFieldNumber = 2;
    private bool hasErrorMessage;
    private string errorMessage_ = "";
    public bool HasErrorMessage {
      get { return hasErrorMessage; }
    }
    public string ErrorMessage {
      get { return errorMessage_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _ackFieldNames;
      if (hasErrorCode) {
        output.WriteInt32(1, field_names[0], ErrorCode);
      }
      if (hasErrorMessage) {
        output.WriteString(2, field_names[1], ErrorMessage);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasErrorCode) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, ErrorCode);
      }
      if (hasErrorMessage) {
        size += pb::CodedOutputStream.ComputeStringSize(2, ErrorMessage);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Ack ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Ack ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Ack ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Ack ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Ack ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Ack ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Ack ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Ack ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Ack ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Ack ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Ack MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Ack prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Ack, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Ack cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Ack result;
      
      private Ack PrepareBuilder() {
        if (resultIsReadOnly) {
          Ack original = result;
          result = new Ack();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Ack MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alibaba.otter.canal.protocol.Ack.Descriptor; }
      }
      
      public override Ack DefaultInstanceForType {
        get { return global::com.alibaba.otter.canal.protocol.Ack.DefaultInstance; }
      }
      
      public override Ack BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Ack) {
          return MergeFrom((Ack) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Ack other) {
        if (other == global::com.alibaba.otter.canal.protocol.Ack.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasErrorCode) {
          ErrorCode = other.ErrorCode;
        }
        if (other.HasErrorMessage) {
          ErrorMessage = other.ErrorMessage;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_ackFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _ackFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasErrorCode = input.ReadInt32(ref result.errorCode_);
              break;
            }
            case 18: {
              result.hasErrorMessage = input.ReadString(ref result.errorMessage_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasErrorCode {
        get { return result.hasErrorCode; }
      }
      public int ErrorCode {
        get { return result.ErrorCode; }
        set { SetErrorCode(value); }
      }
      public Builder SetErrorCode(int value) {
        PrepareBuilder();
        result.hasErrorCode = true;
        result.errorCode_ = value;
        return this;
      }
      public Builder ClearErrorCode() {
        PrepareBuilder();
        result.hasErrorCode = false;
        result.errorCode_ = 0;
        return this;
      }
      
      public bool HasErrorMessage {
        get { return result.hasErrorMessage; }
      }
      public string ErrorMessage {
        get { return result.ErrorMessage; }
        set { SetErrorMessage(value); }
      }
      public Builder SetErrorMessage(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasErrorMessage = true;
        result.errorMessage_ = value;
        return this;
      }
      public Builder ClearErrorMessage() {
        PrepareBuilder();
        result.hasErrorMessage = false;
        result.errorMessage_ = "";
        return this;
      }
    }
    static Ack() {
      object.ReferenceEquals(global::com.alibaba.otter.canal.protocol.CanalProtocol.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ClientAck : pb::GeneratedMessage<ClientAck, ClientAck.Builder> {
    private ClientAck() { }
    private static readonly ClientAck defaultInstance = new ClientAck().MakeReadOnly();
    private static readonly string[] _clientAckFieldNames = new string[] { "batch_id", "client_id", "destination" };
    private static readonly uint[] _clientAckFieldTags = new uint[] { 24, 18, 10 };
    public static ClientAck DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ClientAck DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ClientAck ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alibaba.otter.canal.protocol.CanalProtocol.internal__static_com_alibaba_otter_canal_protocol_ClientAck__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ClientAck, ClientAck.Builder> InternalFieldAccessors {
      get { return global::com.alibaba.otter.canal.protocol.CanalProtocol.internal__static_com_alibaba_otter_canal_protocol_ClientAck__FieldAccessorTable; }
    }
    
    public const int DestinationFieldNumber = 1;
    private bool hasDestination;
    private string destination_ = "";
    public bool HasDestination {
      get { return hasDestination; }
    }
    public string Destination {
      get { return destination_; }
    }
    
    public const int ClientIdFieldNumber = 2;
    private bool hasClientId;
    private string clientId_ = "";
    public bool HasClientId {
      get { return hasClientId; }
    }
    public string ClientId {
      get { return clientId_; }
    }
    
    public const int BatchIdFieldNumber = 3;
    private bool hasBatchId;
    private long batchId_;
    public bool HasBatchId {
      get { return hasBatchId; }
    }
    public long BatchId {
      get { return batchId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _clientAckFieldNames;
      if (hasDestination) {
        output.WriteString(1, field_names[2], Destination);
      }
      if (hasClientId) {
        output.WriteString(2, field_names[1], ClientId);
      }
      if (hasBatchId) {
        output.WriteInt64(3, field_names[0], BatchId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasDestination) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Destination);
      }
      if (hasClientId) {
        size += pb::CodedOutputStream.ComputeStringSize(2, ClientId);
      }
      if (hasBatchId) {
        size += pb::CodedOutputStream.ComputeInt64Size(3, BatchId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ClientAck ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClientAck ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClientAck ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClientAck ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClientAck ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClientAck ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ClientAck ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ClientAck ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ClientAck ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClientAck ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ClientAck MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ClientAck prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ClientAck, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ClientAck cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ClientAck result;
      
      private ClientAck PrepareBuilder() {
        if (resultIsReadOnly) {
          ClientAck original = result;
          result = new ClientAck();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ClientAck MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alibaba.otter.canal.protocol.ClientAck.Descriptor; }
      }
      
      public override ClientAck DefaultInstanceForType {
        get { return global::com.alibaba.otter.canal.protocol.ClientAck.DefaultInstance; }
      }
      
      public override ClientAck BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ClientAck) {
          return MergeFrom((ClientAck) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ClientAck other) {
        if (other == global::com.alibaba.otter.canal.protocol.ClientAck.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasDestination) {
          Destination = other.Destination;
        }
        if (other.HasClientId) {
          ClientId = other.ClientId;
        }
        if (other.HasBatchId) {
          BatchId = other.BatchId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_clientAckFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _clientAckFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasDestination = input.ReadString(ref result.destination_);
              break;
            }
            case 18: {
              result.hasClientId = input.ReadString(ref result.clientId_);
              break;
            }
            case 24: {
              result.hasBatchId = input.ReadInt64(ref result.batchId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasDestination {
        get { return result.hasDestination; }
      }
      public string Destination {
        get { return result.Destination; }
        set { SetDestination(value); }
      }
      public Builder SetDestination(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDestination = true;
        result.destination_ = value;
        return this;
      }
      public Builder ClearDestination() {
        PrepareBuilder();
        result.hasDestination = false;
        result.destination_ = "";
        return this;
      }
      
      public bool HasClientId {
        get { return result.hasClientId; }
      }
      public string ClientId {
        get { return result.ClientId; }
        set { SetClientId(value); }
      }
      public Builder SetClientId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasClientId = true;
        result.clientId_ = value;
        return this;
      }
      public Builder ClearClientId() {
        PrepareBuilder();
        result.hasClientId = false;
        result.clientId_ = "";
        return this;
      }
      
      public bool HasBatchId {
        get { return result.hasBatchId; }
      }
      public long BatchId {
        get { return result.BatchId; }
        set { SetBatchId(value); }
      }
      public Builder SetBatchId(long value) {
        PrepareBuilder();
        result.hasBatchId = true;
        result.batchId_ = value;
        return this;
      }
      public Builder ClearBatchId() {
        PrepareBuilder();
        result.hasBatchId = false;
        result.batchId_ = 0L;
        return this;
      }
    }
    static ClientAck() {
      object.ReferenceEquals(global::com.alibaba.otter.canal.protocol.CanalProtocol.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Sub : pb::GeneratedMessage<Sub, Sub.Builder> {
    private Sub() { }
    private static readonly Sub defaultInstance = new Sub().MakeReadOnly();
    private static readonly string[] _subFieldNames = new string[] { "client_id", "destination", "filter" };
    private static readonly uint[] _subFieldTags = new uint[] { 18, 10, 58 };
    public static Sub DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Sub DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Sub ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alibaba.otter.canal.protocol.CanalProtocol.internal__static_com_alibaba_otter_canal_protocol_Sub__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Sub, Sub.Builder> InternalFieldAccessors {
      get { return global::com.alibaba.otter.canal.protocol.CanalProtocol.internal__static_com_alibaba_otter_canal_protocol_Sub__FieldAccessorTable; }
    }
    
    public const int DestinationFieldNumber = 1;
    private bool hasDestination;
    private string destination_ = "";
    public bool HasDestination {
      get { return hasDestination; }
    }
    public string Destination {
      get { return destination_; }
    }
    
    public const int ClientIdFieldNumber = 2;
    private bool hasClientId;
    private string clientId_ = "";
    public bool HasClientId {
      get { return hasClientId; }
    }
    public string ClientId {
      get { return clientId_; }
    }
    
    public const int FilterFieldNumber = 7;
    private bool hasFilter;
    private string filter_ = "";
    public bool HasFilter {
      get { return hasFilter; }
    }
    public string Filter {
      get { return filter_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _subFieldNames;
      if (hasDestination) {
        output.WriteString(1, field_names[1], Destination);
      }
      if (hasClientId) {
        output.WriteString(2, field_names[0], ClientId);
      }
      if (hasFilter) {
        output.WriteString(7, field_names[2], Filter);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasDestination) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Destination);
      }
      if (hasClientId) {
        size += pb::CodedOutputStream.ComputeStringSize(2, ClientId);
      }
      if (hasFilter) {
        size += pb::CodedOutputStream.ComputeStringSize(7, Filter);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Sub ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Sub ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Sub ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Sub ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Sub ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Sub ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Sub ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Sub ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Sub ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Sub ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Sub MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Sub prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Sub, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Sub cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Sub result;
      
      private Sub PrepareBuilder() {
        if (resultIsReadOnly) {
          Sub original = result;
          result = new Sub();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Sub MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alibaba.otter.canal.protocol.Sub.Descriptor; }
      }
      
      public override Sub DefaultInstanceForType {
        get { return global::com.alibaba.otter.canal.protocol.Sub.DefaultInstance; }
      }
      
      public override Sub BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Sub) {
          return MergeFrom((Sub) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Sub other) {
        if (other == global::com.alibaba.otter.canal.protocol.Sub.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasDestination) {
          Destination = other.Destination;
        }
        if (other.HasClientId) {
          ClientId = other.ClientId;
        }
        if (other.HasFilter) {
          Filter = other.Filter;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_subFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _subFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasDestination = input.ReadString(ref result.destination_);
              break;
            }
            case 18: {
              result.hasClientId = input.ReadString(ref result.clientId_);
              break;
            }
            case 58: {
              result.hasFilter = input.ReadString(ref result.filter_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasDestination {
        get { return result.hasDestination; }
      }
      public string Destination {
        get { return result.Destination; }
        set { SetDestination(value); }
      }
      public Builder SetDestination(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDestination = true;
        result.destination_ = value;
        return this;
      }
      public Builder ClearDestination() {
        PrepareBuilder();
        result.hasDestination = false;
        result.destination_ = "";
        return this;
      }
      
      public bool HasClientId {
        get { return result.hasClientId; }
      }
      public string ClientId {
        get { return result.ClientId; }
        set { SetClientId(value); }
      }
      public Builder SetClientId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasClientId = true;
        result.clientId_ = value;
        return this;
      }
      public Builder ClearClientId() {
        PrepareBuilder();
        result.hasClientId = false;
        result.clientId_ = "";
        return this;
      }
      
      public bool HasFilter {
        get { return result.hasFilter; }
      }
      public string Filter {
        get { return result.Filter; }
        set { SetFilter(value); }
      }
      public Builder SetFilter(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFilter = true;
        result.filter_ = value;
        return this;
      }
      public Builder ClearFilter() {
        PrepareBuilder();
        result.hasFilter = false;
        result.filter_ = "";
        return this;
      }
    }
    static Sub() {
      object.ReferenceEquals(global::com.alibaba.otter.canal.protocol.CanalProtocol.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Unsub : pb::GeneratedMessage<Unsub, Unsub.Builder> {
    private Unsub() { }
    private static readonly Unsub defaultInstance = new Unsub().MakeReadOnly();
    private static readonly string[] _unsubFieldNames = new string[] { "client_id", "destination", "filter" };
    private static readonly uint[] _unsubFieldTags = new uint[] { 18, 10, 58 };
    public static Unsub DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Unsub DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Unsub ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alibaba.otter.canal.protocol.CanalProtocol.internal__static_com_alibaba_otter_canal_protocol_Unsub__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Unsub, Unsub.Builder> InternalFieldAccessors {
      get { return global::com.alibaba.otter.canal.protocol.CanalProtocol.internal__static_com_alibaba_otter_canal_protocol_Unsub__FieldAccessorTable; }
    }
    
    public const int DestinationFieldNumber = 1;
    private bool hasDestination;
    private string destination_ = "";
    public bool HasDestination {
      get { return hasDestination; }
    }
    public string Destination {
      get { return destination_; }
    }
    
    public const int ClientIdFieldNumber = 2;
    private bool hasClientId;
    private string clientId_ = "";
    public bool HasClientId {
      get { return hasClientId; }
    }
    public string ClientId {
      get { return clientId_; }
    }
    
    public const int FilterFieldNumber = 7;
    private bool hasFilter;
    private string filter_ = "";
    public bool HasFilter {
      get { return hasFilter; }
    }
    public string Filter {
      get { return filter_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _unsubFieldNames;
      if (hasDestination) {
        output.WriteString(1, field_names[1], Destination);
      }
      if (hasClientId) {
        output.WriteString(2, field_names[0], ClientId);
      }
      if (hasFilter) {
        output.WriteString(7, field_names[2], Filter);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasDestination) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Destination);
      }
      if (hasClientId) {
        size += pb::CodedOutputStream.ComputeStringSize(2, ClientId);
      }
      if (hasFilter) {
        size += pb::CodedOutputStream.ComputeStringSize(7, Filter);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Unsub ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Unsub ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Unsub ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Unsub ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Unsub ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Unsub ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Unsub ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Unsub ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Unsub ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Unsub ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Unsub MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Unsub prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Unsub, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Unsub cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Unsub result;
      
      private Unsub PrepareBuilder() {
        if (resultIsReadOnly) {
          Unsub original = result;
          result = new Unsub();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Unsub MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alibaba.otter.canal.protocol.Unsub.Descriptor; }
      }
      
      public override Unsub DefaultInstanceForType {
        get { return global::com.alibaba.otter.canal.protocol.Unsub.DefaultInstance; }
      }
      
      public override Unsub BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Unsub) {
          return MergeFrom((Unsub) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Unsub other) {
        if (other == global::com.alibaba.otter.canal.protocol.Unsub.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasDestination) {
          Destination = other.Destination;
        }
        if (other.HasClientId) {
          ClientId = other.ClientId;
        }
        if (other.HasFilter) {
          Filter = other.Filter;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_unsubFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _unsubFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasDestination = input.ReadString(ref result.destination_);
              break;
            }
            case 18: {
              result.hasClientId = input.ReadString(ref result.clientId_);
              break;
            }
            case 58: {
              result.hasFilter = input.ReadString(ref result.filter_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasDestination {
        get { return result.hasDestination; }
      }
      public string Destination {
        get { return result.Destination; }
        set { SetDestination(value); }
      }
      public Builder SetDestination(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDestination = true;
        result.destination_ = value;
        return this;
      }
      public Builder ClearDestination() {
        PrepareBuilder();
        result.hasDestination = false;
        result.destination_ = "";
        return this;
      }
      
      public bool HasClientId {
        get { return result.hasClientId; }
      }
      public string ClientId {
        get { return result.ClientId; }
        set { SetClientId(value); }
      }
      public Builder SetClientId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasClientId = true;
        result.clientId_ = value;
        return this;
      }
      public Builder ClearClientId() {
        PrepareBuilder();
        result.hasClientId = false;
        result.clientId_ = "";
        return this;
      }
      
      public bool HasFilter {
        get { return result.hasFilter; }
      }
      public string Filter {
        get { return result.Filter; }
        set { SetFilter(value); }
      }
      public Builder SetFilter(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFilter = true;
        result.filter_ = value;
        return this;
      }
      public Builder ClearFilter() {
        PrepareBuilder();
        result.hasFilter = false;
        result.filter_ = "";
        return this;
      }
    }
    static Unsub() {
      object.ReferenceEquals(global::com.alibaba.otter.canal.protocol.CanalProtocol.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Get : pb::GeneratedMessage<Get, Get.Builder> {
    private Get() { }
    private static readonly Get defaultInstance = new Get().MakeReadOnly();
    private static readonly string[] _getFieldNames = new string[] { "auto_ack", "client_id", "destination", "fetch_size", "timeout", "unit" };
    private static readonly uint[] _getFieldTags = new uint[] { 48, 18, 10, 24, 32, 40 };
    public static Get DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Get DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Get ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alibaba.otter.canal.protocol.CanalProtocol.internal__static_com_alibaba_otter_canal_protocol_Get__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Get, Get.Builder> InternalFieldAccessors {
      get { return global::com.alibaba.otter.canal.protocol.CanalProtocol.internal__static_com_alibaba_otter_canal_protocol_Get__FieldAccessorTable; }
    }
    
    public const int DestinationFieldNumber = 1;
    private bool hasDestination;
    private string destination_ = "";
    public bool HasDestination {
      get { return hasDestination; }
    }
    public string Destination {
      get { return destination_; }
    }
    
    public const int ClientIdFieldNumber = 2;
    private bool hasClientId;
    private string clientId_ = "";
    public bool HasClientId {
      get { return hasClientId; }
    }
    public string ClientId {
      get { return clientId_; }
    }
    
    public const int FetchSizeFieldNumber = 3;
    private bool hasFetchSize;
    private int fetchSize_;
    public bool HasFetchSize {
      get { return hasFetchSize; }
    }
    public int FetchSize {
      get { return fetchSize_; }
    }
    
    public const int TimeoutFieldNumber = 4;
    private bool hasTimeout;
    private long timeout_ = -1L;
    public bool HasTimeout {
      get { return hasTimeout; }
    }
    public long Timeout {
      get { return timeout_; }
    }
    
    public const int UnitFieldNumber = 5;
    private bool hasUnit;
    private int unit_ = 2;
    public bool HasUnit {
      get { return hasUnit; }
    }
    public int Unit {
      get { return unit_; }
    }
    
    public const int AutoAckFieldNumber = 6;
    private bool hasAutoAck;
    private bool autoAck_;
    public bool HasAutoAck {
      get { return hasAutoAck; }
    }
    public bool AutoAck {
      get { return autoAck_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _getFieldNames;
      if (hasDestination) {
        output.WriteString(1, field_names[2], Destination);
      }
      if (hasClientId) {
        output.WriteString(2, field_names[1], ClientId);
      }
      if (hasFetchSize) {
        output.WriteInt32(3, field_names[3], FetchSize);
      }
      if (hasTimeout) {
        output.WriteInt64(4, field_names[4], Timeout);
      }
      if (hasUnit) {
        output.WriteInt32(5, field_names[5], Unit);
      }
      if (hasAutoAck) {
        output.WriteBool(6, field_names[0], AutoAck);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasDestination) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Destination);
      }
      if (hasClientId) {
        size += pb::CodedOutputStream.ComputeStringSize(2, ClientId);
      }
      if (hasFetchSize) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, FetchSize);
      }
      if (hasTimeout) {
        size += pb::CodedOutputStream.ComputeInt64Size(4, Timeout);
      }
      if (hasUnit) {
        size += pb::CodedOutputStream.ComputeInt32Size(5, Unit);
      }
      if (hasAutoAck) {
        size += pb::CodedOutputStream.ComputeBoolSize(6, AutoAck);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Get ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Get ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Get ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Get ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Get ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Get ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Get ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Get ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Get ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Get ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Get MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Get prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Get, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Get cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Get result;
      
      private Get PrepareBuilder() {
        if (resultIsReadOnly) {
          Get original = result;
          result = new Get();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Get MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alibaba.otter.canal.protocol.Get.Descriptor; }
      }
      
      public override Get DefaultInstanceForType {
        get { return global::com.alibaba.otter.canal.protocol.Get.DefaultInstance; }
      }
      
      public override Get BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Get) {
          return MergeFrom((Get) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Get other) {
        if (other == global::com.alibaba.otter.canal.protocol.Get.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasDestination) {
          Destination = other.Destination;
        }
        if (other.HasClientId) {
          ClientId = other.ClientId;
        }
        if (other.HasFetchSize) {
          FetchSize = other.FetchSize;
        }
        if (other.HasTimeout) {
          Timeout = other.Timeout;
        }
        if (other.HasUnit) {
          Unit = other.Unit;
        }
        if (other.HasAutoAck) {
          AutoAck = other.AutoAck;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasDestination = input.ReadString(ref result.destination_);
              break;
            }
            case 18: {
              result.hasClientId = input.ReadString(ref result.clientId_);
              break;
            }
            case 24: {
              result.hasFetchSize = input.ReadInt32(ref result.fetchSize_);
              break;
            }
            case 32: {
              result.hasTimeout = input.ReadInt64(ref result.timeout_);
              break;
            }
            case 40: {
              result.hasUnit = input.ReadInt32(ref result.unit_);
              break;
            }
            case 48: {
              result.hasAutoAck = input.ReadBool(ref result.autoAck_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasDestination {
        get { return result.hasDestination; }
      }
      public string Destination {
        get { return result.Destination; }
        set { SetDestination(value); }
      }
      public Builder SetDestination(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDestination = true;
        result.destination_ = value;
        return this;
      }
      public Builder ClearDestination() {
        PrepareBuilder();
        result.hasDestination = false;
        result.destination_ = "";
        return this;
      }
      
      public bool HasClientId {
        get { return result.hasClientId; }
      }
      public string ClientId {
        get { return result.ClientId; }
        set { SetClientId(value); }
      }
      public Builder SetClientId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasClientId = true;
        result.clientId_ = value;
        return this;
      }
      public Builder ClearClientId() {
        PrepareBuilder();
        result.hasClientId = false;
        result.clientId_ = "";
        return this;
      }
      
      public bool HasFetchSize {
        get { return result.hasFetchSize; }
      }
      public int FetchSize {
        get { return result.FetchSize; }
        set { SetFetchSize(value); }
      }
      public Builder SetFetchSize(int value) {
        PrepareBuilder();
        result.hasFetchSize = true;
        result.fetchSize_ = value;
        return this;
      }
      public Builder ClearFetchSize() {
        PrepareBuilder();
        result.hasFetchSize = false;
        result.fetchSize_ = 0;
        return this;
      }
      
      public bool HasTimeout {
        get { return result.hasTimeout; }
      }
      public long Timeout {
        get { return result.Timeout; }
        set { SetTimeout(value); }
      }
      public Builder SetTimeout(long value) {
        PrepareBuilder();
        result.hasTimeout = true;
        result.timeout_ = value;
        return this;
      }
      public Builder ClearTimeout() {
        PrepareBuilder();
        result.hasTimeout = false;
        result.timeout_ = -1L;
        return this;
      }
      
      public bool HasUnit {
        get { return result.hasUnit; }
      }
      public int Unit {
        get { return result.Unit; }
        set { SetUnit(value); }
      }
      public Builder SetUnit(int value) {
        PrepareBuilder();
        result.hasUnit = true;
        result.unit_ = value;
        return this;
      }
      public Builder ClearUnit() {
        PrepareBuilder();
        result.hasUnit = false;
        result.unit_ = 2;
        return this;
      }
      
      public bool HasAutoAck {
        get { return result.hasAutoAck; }
      }
      public bool AutoAck {
        get { return result.AutoAck; }
        set { SetAutoAck(value); }
      }
      public Builder SetAutoAck(bool value) {
        PrepareBuilder();
        result.hasAutoAck = true;
        result.autoAck_ = value;
        return this;
      }
      public Builder ClearAutoAck() {
        PrepareBuilder();
        result.hasAutoAck = false;
        result.autoAck_ = false;
        return this;
      }
    }
    static Get() {
      object.ReferenceEquals(global::com.alibaba.otter.canal.protocol.CanalProtocol.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Messages : pb::GeneratedMessage<Messages, Messages.Builder> {
    private Messages() { }
    private static readonly Messages defaultInstance = new Messages().MakeReadOnly();
    private static readonly string[] _messagesFieldNames = new string[] { "batch_id", "messages" };
    private static readonly uint[] _messagesFieldTags = new uint[] { 8, 18 };
    public static Messages DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Messages DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Messages ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alibaba.otter.canal.protocol.CanalProtocol.internal__static_com_alibaba_otter_canal_protocol_Messages__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Messages, Messages.Builder> InternalFieldAccessors {
      get { return global::com.alibaba.otter.canal.protocol.CanalProtocol.internal__static_com_alibaba_otter_canal_protocol_Messages__FieldAccessorTable; }
    }
    
    public const int BatchIdFieldNumber = 1;
    private bool hasBatchId;
    private long batchId_;
    public bool HasBatchId {
      get { return hasBatchId; }
    }
    public long BatchId {
      get { return batchId_; }
    }
    
    public const int Messages_FieldNumber = 2;
    private pbc::PopsicleList<pb::ByteString> messages_ = new pbc::PopsicleList<pb::ByteString>();
    public scg::IList<pb::ByteString> Messages_List {
      get { return pbc::Lists.AsReadOnly(messages_); }
    }
    public int Messages_Count {
      get { return messages_.Count; }
    }
    public pb::ByteString GetMessages_(int index) {
      return messages_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _messagesFieldNames;
      if (hasBatchId) {
        output.WriteInt64(1, field_names[0], BatchId);
      }
      if (messages_.Count > 0) {
        output.WriteBytesArray(2, field_names[1], messages_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasBatchId) {
        size += pb::CodedOutputStream.ComputeInt64Size(1, BatchId);
      }
      {
        int dataSize = 0;
        foreach (pb::ByteString element in Messages_List) {
          dataSize += pb::CodedOutputStream.ComputeBytesSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * messages_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Messages ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Messages ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Messages ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Messages ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Messages ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Messages ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Messages ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Messages ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Messages ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Messages ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Messages MakeReadOnly() {
      messages_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Messages prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Messages, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Messages cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Messages result;
      
      private Messages PrepareBuilder() {
        if (resultIsReadOnly) {
          Messages original = result;
          result = new Messages();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Messages MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alibaba.otter.canal.protocol.Messages.Descriptor; }
      }
      
      public override Messages DefaultInstanceForType {
        get { return global::com.alibaba.otter.canal.protocol.Messages.DefaultInstance; }
      }
      
      public override Messages BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Messages) {
          return MergeFrom((Messages) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Messages other) {
        if (other == global::com.alibaba.otter.canal.protocol.Messages.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasBatchId) {
          BatchId = other.BatchId;
        }
        if (other.messages_.Count != 0) {
          result.messages_.Add(other.messages_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_messagesFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _messagesFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasBatchId = input.ReadInt64(ref result.batchId_);
              break;
            }
            case 18: {
              input.ReadBytesArray(tag, field_name, result.messages_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasBatchId {
        get { return result.hasBatchId; }
      }
      public long BatchId {
        get { return result.BatchId; }
        set { SetBatchId(value); }
      }
      public Builder SetBatchId(long value) {
        PrepareBuilder();
        result.hasBatchId = true;
        result.batchId_ = value;
        return this;
      }
      public Builder ClearBatchId() {
        PrepareBuilder();
        result.hasBatchId = false;
        result.batchId_ = 0L;
        return this;
      }
      
      public pbc::IPopsicleList<pb::ByteString> Messages_List {
        get { return PrepareBuilder().messages_; }
      }
      public int Messages_Count {
        get { return result.Messages_Count; }
      }
      public pb::ByteString GetMessages_(int index) {
        return result.GetMessages_(index);
      }
      public Builder SetMessages_(int index, pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.messages_[index] = value;
        return this;
      }
      public Builder AddMessages_(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.messages_.Add(value);
        return this;
      }
      public Builder AddRangeMessages_(scg::IEnumerable<pb::ByteString> values) {
        PrepareBuilder();
        result.messages_.Add(values);
        return this;
      }
      public Builder ClearMessages_() {
        PrepareBuilder();
        result.messages_.Clear();
        return this;
      }
    }
    static Messages() {
      object.ReferenceEquals(global::com.alibaba.otter.canal.protocol.CanalProtocol.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Dump : pb::GeneratedMessage<Dump, Dump.Builder> {
    private Dump() { }
    private static readonly Dump defaultInstance = new Dump().MakeReadOnly();
    private static readonly string[] _dumpFieldNames = new string[] { "journal", "position", "timestamp" };
    private static readonly uint[] _dumpFieldTags = new uint[] { 10, 16, 24 };
    public static Dump DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Dump DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Dump ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alibaba.otter.canal.protocol.CanalProtocol.internal__static_com_alibaba_otter_canal_protocol_Dump__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Dump, Dump.Builder> InternalFieldAccessors {
      get { return global::com.alibaba.otter.canal.protocol.CanalProtocol.internal__static_com_alibaba_otter_canal_protocol_Dump__FieldAccessorTable; }
    }
    
    public const int JournalFieldNumber = 1;
    private bool hasJournal;
    private string journal_ = "";
    public bool HasJournal {
      get { return hasJournal; }
    }
    public string Journal {
      get { return journal_; }
    }
    
    public const int PositionFieldNumber = 2;
    private bool hasPosition;
    private long position_;
    public bool HasPosition {
      get { return hasPosition; }
    }
    public long Position {
      get { return position_; }
    }
    
    public const int TimestampFieldNumber = 3;
    private bool hasTimestamp;
    private long timestamp_;
    public bool HasTimestamp {
      get { return hasTimestamp; }
    }
    public long Timestamp {
      get { return timestamp_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _dumpFieldNames;
      if (hasJournal) {
        output.WriteString(1, field_names[0], Journal);
      }
      if (hasPosition) {
        output.WriteInt64(2, field_names[1], Position);
      }
      if (hasTimestamp) {
        output.WriteInt64(3, field_names[2], Timestamp);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasJournal) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Journal);
      }
      if (hasPosition) {
        size += pb::CodedOutputStream.ComputeInt64Size(2, Position);
      }
      if (hasTimestamp) {
        size += pb::CodedOutputStream.ComputeInt64Size(3, Timestamp);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Dump ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Dump ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Dump ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Dump ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Dump ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Dump ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Dump ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Dump ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Dump ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Dump ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Dump MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Dump prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Dump, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Dump cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Dump result;
      
      private Dump PrepareBuilder() {
        if (resultIsReadOnly) {
          Dump original = result;
          result = new Dump();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Dump MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alibaba.otter.canal.protocol.Dump.Descriptor; }
      }
      
      public override Dump DefaultInstanceForType {
        get { return global::com.alibaba.otter.canal.protocol.Dump.DefaultInstance; }
      }
      
      public override Dump BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Dump) {
          return MergeFrom((Dump) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Dump other) {
        if (other == global::com.alibaba.otter.canal.protocol.Dump.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasJournal) {
          Journal = other.Journal;
        }
        if (other.HasPosition) {
          Position = other.Position;
        }
        if (other.HasTimestamp) {
          Timestamp = other.Timestamp;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_dumpFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _dumpFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasJournal = input.ReadString(ref result.journal_);
              break;
            }
            case 16: {
              result.hasPosition = input.ReadInt64(ref result.position_);
              break;
            }
            case 24: {
              result.hasTimestamp = input.ReadInt64(ref result.timestamp_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasJournal {
        get { return result.hasJournal; }
      }
      public string Journal {
        get { return result.Journal; }
        set { SetJournal(value); }
      }
      public Builder SetJournal(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasJournal = true;
        result.journal_ = value;
        return this;
      }
      public Builder ClearJournal() {
        PrepareBuilder();
        result.hasJournal = false;
        result.journal_ = "";
        return this;
      }
      
      public bool HasPosition {
        get { return result.hasPosition; }
      }
      public long Position {
        get { return result.Position; }
        set { SetPosition(value); }
      }
      public Builder SetPosition(long value) {
        PrepareBuilder();
        result.hasPosition = true;
        result.position_ = value;
        return this;
      }
      public Builder ClearPosition() {
        PrepareBuilder();
        result.hasPosition = false;
        result.position_ = 0L;
        return this;
      }
      
      public bool HasTimestamp {
        get { return result.hasTimestamp; }
      }
      public long Timestamp {
        get { return result.Timestamp; }
        set { SetTimestamp(value); }
      }
      public Builder SetTimestamp(long value) {
        PrepareBuilder();
        result.hasTimestamp = true;
        result.timestamp_ = value;
        return this;
      }
      public Builder ClearTimestamp() {
        PrepareBuilder();
        result.hasTimestamp = false;
        result.timestamp_ = 0L;
        return this;
      }
    }
    static Dump() {
      object.ReferenceEquals(global::com.alibaba.otter.canal.protocol.CanalProtocol.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ClientRollback : pb::GeneratedMessage<ClientRollback, ClientRollback.Builder> {
    private ClientRollback() { }
    private static readonly ClientRollback defaultInstance = new ClientRollback().MakeReadOnly();
    private static readonly string[] _clientRollbackFieldNames = new string[] { "batch_id", "client_id", "destination" };
    private static readonly uint[] _clientRollbackFieldTags = new uint[] { 24, 18, 10 };
    public static ClientRollback DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ClientRollback DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ClientRollback ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.alibaba.otter.canal.protocol.CanalProtocol.internal__static_com_alibaba_otter_canal_protocol_ClientRollback__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ClientRollback, ClientRollback.Builder> InternalFieldAccessors {
      get { return global::com.alibaba.otter.canal.protocol.CanalProtocol.internal__static_com_alibaba_otter_canal_protocol_ClientRollback__FieldAccessorTable; }
    }
    
    public const int DestinationFieldNumber = 1;
    private bool hasDestination;
    private string destination_ = "";
    public bool HasDestination {
      get { return hasDestination; }
    }
    public string Destination {
      get { return destination_; }
    }
    
    public const int ClientIdFieldNumber = 2;
    private bool hasClientId;
    private string clientId_ = "";
    public bool HasClientId {
      get { return hasClientId; }
    }
    public string ClientId {
      get { return clientId_; }
    }
    
    public const int BatchIdFieldNumber = 3;
    private bool hasBatchId;
    private long batchId_;
    public bool HasBatchId {
      get { return hasBatchId; }
    }
    public long BatchId {
      get { return batchId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _clientRollbackFieldNames;
      if (hasDestination) {
        output.WriteString(1, field_names[2], Destination);
      }
      if (hasClientId) {
        output.WriteString(2, field_names[1], ClientId);
      }
      if (hasBatchId) {
        output.WriteInt64(3, field_names[0], BatchId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasDestination) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Destination);
      }
      if (hasClientId) {
        size += pb::CodedOutputStream.ComputeStringSize(2, ClientId);
      }
      if (hasBatchId) {
        size += pb::CodedOutputStream.ComputeInt64Size(3, BatchId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ClientRollback ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClientRollback ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClientRollback ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClientRollback ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClientRollback ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClientRollback ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ClientRollback ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ClientRollback ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ClientRollback ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClientRollback ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ClientRollback MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ClientRollback prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ClientRollback, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ClientRollback cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ClientRollback result;
      
      private ClientRollback PrepareBuilder() {
        if (resultIsReadOnly) {
          ClientRollback original = result;
          result = new ClientRollback();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ClientRollback MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.alibaba.otter.canal.protocol.ClientRollback.Descriptor; }
      }
      
      public override ClientRollback DefaultInstanceForType {
        get { return global::com.alibaba.otter.canal.protocol.ClientRollback.DefaultInstance; }
      }
      
      public override ClientRollback BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ClientRollback) {
          return MergeFrom((ClientRollback) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ClientRollback other) {
        if (other == global::com.alibaba.otter.canal.protocol.ClientRollback.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasDestination) {
          Destination = other.Destination;
        }
        if (other.HasClientId) {
          ClientId = other.ClientId;
        }
        if (other.HasBatchId) {
          BatchId = other.BatchId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_clientRollbackFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _clientRollbackFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasDestination = input.ReadString(ref result.destination_);
              break;
            }
            case 18: {
              result.hasClientId = input.ReadString(ref result.clientId_);
              break;
            }
            case 24: {
              result.hasBatchId = input.ReadInt64(ref result.batchId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasDestination {
        get { return result.hasDestination; }
      }
      public string Destination {
        get { return result.Destination; }
        set { SetDestination(value); }
      }
      public Builder SetDestination(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDestination = true;
        result.destination_ = value;
        return this;
      }
      public Builder ClearDestination() {
        PrepareBuilder();
        result.hasDestination = false;
        result.destination_ = "";
        return this;
      }
      
      public bool HasClientId {
        get { return result.hasClientId; }
      }
      public string ClientId {
        get { return result.ClientId; }
        set { SetClientId(value); }
      }
      public Builder SetClientId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasClientId = true;
        result.clientId_ = value;
        return this;
      }
      public Builder ClearClientId() {
        PrepareBuilder();
        result.hasClientId = false;
        result.clientId_ = "";
        return this;
      }
      
      public bool HasBatchId {
        get { return result.hasBatchId; }
      }
      public long BatchId {
        get { return result.BatchId; }
        set { SetBatchId(value); }
      }
      public Builder SetBatchId(long value) {
        PrepareBuilder();
        result.hasBatchId = true;
        result.batchId_ = value;
        return this;
      }
      public Builder ClearBatchId() {
        PrepareBuilder();
        result.hasBatchId = false;
        result.batchId_ = 0L;
        return this;
      }
    }
    static ClientRollback() {
      object.ReferenceEquals(global::com.alibaba.otter.canal.protocol.CanalProtocol.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
